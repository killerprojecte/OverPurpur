From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: jim Anser <20071128jim@gmail.com>
Date: Thu, 3 Nov 2022 10:40:21 +0000
Subject: [PATCH] Commit


diff --git a/src/main/java/net/minecraft/server/Main.java b/src/main/java/net/minecraft/server/Main.java
index 444693f4b27fa7e80d3099fd7ea3a6d28a2196a6..127ac1b47eb248c37e175b954d51cc959edf3743 100644
--- a/src/main/java/net/minecraft/server/Main.java
+++ b/src/main/java/net/minecraft/server/Main.java
@@ -177,7 +177,7 @@ public class Main {
             // Paper end - fix SPIGOT-5824
             Services services = Services.create(new com.destroystokyo.paper.profile.PaperAuthenticationService(Proxy.NO_PROXY), file, userCacheFile, optionset); // Paper
             // CraftBukkit start
-            String s = (String) Optional.ofNullable((String) optionset.valueOf("world_nether")).orElse(dedicatedserversettings.getProperties().levelName + "_nether");
+            String s = (String) Optional.ofNullable((String) optionset.valueOf("world")).orElse(dedicatedserversettings.getProperties().levelName);
             LevelStorageSource convertable = LevelStorageSource.createDefault(file.toPath());
             LevelStorageSource.LevelStorageAccess convertable_conversionsession = convertable.createAccess(s, LevelStem.NETHER);
             LevelSummary worldinfo = convertable_conversionsession.getSummary();
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 1471a53c09711226a269359ab4e0d16ed717417d..c0eae801a36d5d4484418e4b33aa155e615a745c 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -491,8 +491,8 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
             String name = (dimensionKey == LevelStem.OVERWORLD) ? s : s + "_" + worldType;
             if (dimension != -1) {
                 File newWorld = LevelStorageSource.getStorageFolder(new File(name).toPath(), dimensionKey).toFile();
-                File oldWorld = LevelStorageSource.getStorageFolder(new File(s).toPath(), dimensionKey).toFile();
-                File oldLevelDat = new File(new File(s), "level.dat"); // The data folders exist on first run as they are created in the PersistentCollection constructor above, but the level.dat won't
+                File oldWorld = LevelStorageSource.getStorageFolder(new File(name).toPath(), dimensionKey).toFile();
+                File oldLevelDat = new File(new File(name), "level.dat"); // The data folders exist on first run as they are created in the PersistentCollection constructor above, but the level.dat won't
 
                 if (!newWorld.isDirectory() && oldWorld.isDirectory() && oldLevelDat.isFile()) {
                     MinecraftServer.LOGGER.info("---- Migration of old " + worldType + " folder required ----");
@@ -525,7 +525,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
                 }
 
                 try {
-                    worldSession = LevelStorageSource.createDefault(this.server.getWorldContainer().toPath()).createAccess(name, dimensionKey);
+                    worldSession = LevelStorageSource.createDefault(this.server.getWorldContainer().getParentFile().toPath()).createAccess(name, dimensionKey);
                 } catch (IOException ex) {
                     throw new RuntimeException(ex);
                 }
@@ -562,7 +562,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
             List<CustomSpawner> list = ImmutableList.of(new PhantomSpawner(), new PatrolSpawner(), new CatSpawner(), new VillageSiege(), new WanderingTraderSpawner(iworlddataserver));
             // Paper start - Use correct LevelStem registry
             final LevelStem worlddimension;
-            if (dimensionKey == LevelStem.END || dimensionKey == LevelStem.NETHER) {
+            if (dimensionKey == LevelStem.END) {
                 worlddimension = generatorsettings.dimensions().get(dimensionKey);
             } else {
                 worlddimension = iregistry.get(dimensionKey);
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index dc62dbcb97b49d1dea029d3a9802a81c106669f3..e1518a38e7bc0af90cf1f9295933c5b4cce114e0 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1246,7 +1246,7 @@ public final class CraftServer implements Server {
 
         LevelStorageSource.LevelStorageAccess worldSession;
         try {
-            worldSession = LevelStorageSource.createDefault(this.getWorldContainer().toPath()).createAccess(name, actualDimension);
+            worldSession = LevelStorageSource.createDefault(this.getWorldContainer().getParentFile().toPath()).createAccess(name, actualDimension);
         } catch (IOException ex) {
             throw new RuntimeException(ex);
         }
